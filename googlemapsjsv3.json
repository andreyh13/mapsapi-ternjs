{
  "!name": "googlemapsjsv3",
  "!define": {
    "MapOptions": {
      "backgroundColor": "string",
      "center": "google.maps.LatLng",
      "disableDefaultUI": "bool",
      "disableDoubleClickZoom": "bool",
      "draggable": "bool",
      "draggableCursor": "string",
      "draggingCursor": "string",
      "heading": "number",
      "keyboardShortcuts": "bool",
      "mapMaker": "bool",
      "mapTypeControl": "bool",
      "mapTypeControlOptions": "MapTypeControlOptions",
      "mapTypeId": "MapTypeId",
      "maxZoom": "number",
      "minZoom": "number",
      "noClear": "bool",
      "overviewMapControl": "bool",
      "overviewMapControlOptions": "OverviewMapControlOptions",
      "panControl": "bool",
      "panControlOptions": "PanControlOptions",
      "rotateControl": "bool",
      "rotateControlOptions": "RotateControlOptions",
      "scaleControl": "bool",
      "scaleControlOptions": "ScaleControlOptions",
      "scrollwheel": "bool",
      "streetView": "google.maps.StreetViewPanorama",
      "streetViewControl": "bool",
      "streetViewControlOptions": "StreetViewControlOptions",
      "styles": "[MapTypeStyle]",
      "tilt": "number",
      "zoom": "number",
      "zoomControl": "bool",
      "zoomControlOptions": "ZoomControlOptions"
    },
    "Events": {

    }
  },
  "google": {
    "maps": {
      "version": "string",
      "Map": {
        "!type": "fn(mapDiv: Node, opts?: MapOptions) -> +google.maps.Map",
        "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
        "!doc": "Creates a new map inside of the given HTML container, which is typically a DIV element.",
        "prototype": {
          "fitBounds": {
            "!type": "fn(bounds: LatLngBounds)",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": "Sets the viewport to contain the given bounds."
          },
          "getBounds": {
            "!type": "fn() -> google.maps.LatLngBounds",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": "Returns the lat/lng bounds of the current viewport. If more than one copy of the world is visible, the bounds range in longitude from -180 to 180 degrees inclusive. If the map is not yet initialized (i.e. the mapType is still null), or center and zoom have not been set then the result is null or undefined."
          },
          "getCenter": {
            "!type": "fn() -> google.maps.LatLng",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": "Returns the position displayed at the center of the map. Note that this LatLng object is not wrapped. See LatLng for more information."
          },
          "getDiv": {
            "!type": "fn() -> Node",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": ""
          },
          "getHeading": {
            "!type": "fn() -> number",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": "Returns the compass heading of aerial imagery. The heading value is measured in degrees (clockwise) from cardinal direction North."
          },
          "getMapTypeId": {
            "!type": "fn() -> string",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": ""
          },
          "getProjection": {
            "!type": "fn() -> google.maps.Projection",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": "Returns the current Projection. If the map is not yet initialized (i.e. the mapType is still null) then the result is null. Listen to projection_changed and check its value to ensure it is not null."
          },
          "getStreetView": {
            "!type": "fn() -> google.maps.StreetViewPanorama",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": "Returns the default StreetViewPanorama bound to the map, which may be a default panorama embedded within the map, or the panorama set using setStreetView(). Changes to the map's streetViewControl will be reflected in the display of such a bound panorama."
          },
          "getTilt": {
            "!type": "fn() -> number",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": "Returns the current angle of incidence of the map, in degrees from the viewport plane to the map plane. The result will be 0 for imagery taken directly overhead or 45 for 45° imagery. 45° imagery is only available for SATELLITE and HYBRID map types, within some locations, and at some zoom levels. Note: This method does not return the value set by setTilt. See setTilt for details."
          },
          "getZoom": {
            "!type": "fn() -> number",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": ""
          },
          "panBy": {
            "!type": "fn(x: number, y: number)",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": "Changes the center of the map by the given distance in pixels. If the distance is less than both the width and height of the map, the transition will be smoothly animated. Note that the map coordinate system increases from west to east (for x values) and north to south (for y values)."
          },
          "panTo": {
            "!type": "fn(latLng: google.maps.LatLng)",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": "Changes the center of the map to the given LatLng. If the change is less than both the width and height of the map, the transition will be smoothly animated."
          },
          "panTo": {
            "!type": "fn(latLng: LatLngLiteral)",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": "Changes the center of the map to the given LatLng. If the change is less than both the width and height of the map, the transition will be smoothly animated."
          },
          "panToBounds": {
            "!type": "fn(latLngBounds: google.maps.LatLngBounds)",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": "Pans the map by the minimum amount necessary to contain the given LatLngBounds. It makes no guarantee where on the map the bounds will be, except that as much of the bounds as possible will be visible. The bounds will be positioned inside the area bounded by the map type and navigation (pan, zoom, and Street View) controls, if they are present on the map. If the bounds is larger than the map, the map will be shifted to include the northwest corner of the bounds. If the change in the map's position is less than both the width and height of the map, the transition will be smoothly animated."
          },
          "setCenter": {
            "!type": "fn(latlng: google.maps.LatLng)",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": ""
          },
          "setCenter": {
            "!type": "fn(latlng: LatLngLiteral)",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": ""
          },
          "setHeading": {
            "!type": "fn(heading: number)",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": "Sets the compass heading for aerial imagery measured in degrees from cardinal direction North."
          },
          "setMapTypeId": {
            "!type": "fn(mapTypeId: google.maps.MapTypeId)",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": ""
          },
          "setMapTypeId": {
            "!type": "fn(mapTypeId: string)",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": ""
          },
          "setOptions": {
            "!type": "fn(options: MapOptions)",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": ""
          },
          "setStreetView": {
            "!type": "fn(panorama: google.maps.StreetViewPanorama)",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": "Binds a StreetViewPanorama to the map. This panorama overrides the default StreetViewPanorama, allowing the map to bind to an external panorama outside of the map. Setting the panorama to null binds the default embedded panorama back to the map."
          },
          "setTilt": {
            "!type": "fn(tilt: number)",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": "Controls the automatic switching behavior for the angle of incidence of the map. The only allowed values are 0 and 45. setTilt(0) causes the map to always use a 0° overhead view regardless of the zoom level and viewport. setTilt(45) causes the tilt angle to automatically switch to 45 whenever 45° imagery is available for the current zoom level and viewport, and switch back to 0 whenever 45° imagery is not available (this is the default behavior). 45° imagery is only available for SATELLITE and HYBRID map types, within some locations, and at some zoom levels. Note: getTilt returns the current tilt angle, not the value set by setTilt. Because getTilt and setTilt refer to different things, do not bind() the tilt property; doing so may yield unpredictable effects."
          },
          "setZoom": {
            "!type": "fn(zoom: number)",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": ""
          },
          "controls": {
            "!type": "[google.maps.MVCArray]",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": "Additional controls to attach to the map. To add a control to the map, add the control's <div> to the MVCArray corresponding to the ControlPosition where it should be rendered."
          },
          "data": {
            "!type": "google.maps.Data",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": "An instance of Data, bound to the map. Add features to this Data object to conveniently display them on this map"
          },
          "mapTypes": {
            "!type": "google.maps.MapTypeRegistry",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": "A registry of MapType instances by string ID."
          },
          "overlayMapTypes": {
            "!type": "google.maps.MVCArray",
            "!url": "https://developers.google.com/maps/documentation/javascript/reference#Map",
            "!doc": "Additional map types to overlay."
          }
        }
      }

    }
  }
}  
